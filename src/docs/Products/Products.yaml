paths:
  /api/products:
    get:
      summary: List of products
      tags:
        - Products
      responses:
        200:
          description: Products were listed correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        500:
          description: Internal Server Error.
    post:
      summary: Create new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/createProduct"
      responses:
        201:
          description: Product created succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Product"
        400:
          description: There is a product with the same code
        401:
          description: No auth token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Response status
                    example: No auth token
                  login:
                    type: string
                    description: Link of login view
                    example: http://localhost:8080/views/login
        500:
          description: Error interno del servidor.

  /api/products/{productId}:
    get:
      summary: Get a product by identifer
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          required: true
          description: Identifier of the product to search
          schema:
            type: string
      responses:
        200:
          description: Product with valid identifier
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: product with productId not found
                    example: "Product with 655a45ff59dcc07a93eff698 not found"
        500:
          description: Internal Server Error.
    put:
      summary: Update a product by identifier
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          required: true
          description: Identifier of the product to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        200:
          description: Product updated succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Response status
                    example: success
                  message:
                    type: string
                    description: Response message
                    example: The resource has been updated succesfully
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Response status
                    example: error
                  message:
                    type: string
                    description: Response message
                    example: Product with 655a45ff59dcc07a93eff682 not found
        500:
          description: Internal Server Error.
    delete:
      summary: Delete a product by identifier
      tags:
        - Products
      parameters:
        - in: path
          name: productId
          required: true
          description: Identifier of the product to delete
          schema:
            type: string
      responses:
        200:
          description: Product deleted succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Response status
                    example: success
                  message:
                    type: string
                    description: Response message
                    example: The resource has been deleted succesfully
        401:
          description: No auth token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Response status
                    example: No auth token
                  login:
                    type: string
                    description: Link of login view
                    example: http://localhost:8080/views/login
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Response status
                    example: error
                  message:
                    type: string
                    description: Response message
                    example: Product with 655a45ff59dcc07a93eff682 not found
        500:
          description: Internal Server Error.

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Product ID generated by data base
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product features and information
        price:
          type: float
          description: Product price
        thumbnail:
          type: string
          description: Product Image URL
        code:
          type: string
          description: A product unique code
        stock:
          type: int
          description: Number of available products
        category:
          type: string
          description: Department which product belongs
        owner:
          type: object
          properties:
            first_name:
              type: string
              description: Owner's first name
            last_name:
              type: string
              description: Owner's last name
            email:
              type: string
              description: Owner's email
      example:
        _id: 655a45ff59dcc07a93eff688
        title: Licuadora Oster
        description: Licuadora de alto rendimiento con cuchillas de acero inoxidable y jarra de vidrio resistente.
        price: 799.99
        thumbnail: https://m.media-amazon.com/images/I/51X0jzGB9NL._AC_UF894,1000_QL80_.jpg
        code: OST123
        stock: 16
        category: cocina
        owner:
          first_name: Jorge
          last_name: Infante
          email: jinfante2212@gmail.com
  requestBodies:
    updateProduct:
      type: object
      properties:
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product features and information
        price:
          type: float
          description: Product price
        thumbnail:
          type: string
          description: Product Image URL
        code:
          type: string
          description: A product unique code
        stock:
          type: int
          description: Number of available products
        category:
          type: string
          description: Department which product belongs
        owner:
          type: string
          description: Owner product id
      example:
        title: Microondas Panasonic
        description: Microondas con capacidad de 1.2 cu. ft. y múltiples ajustes de cocción para una fácil preparación de alimentos.
        price: 1599
        thumbnail: https://www.costco.com.mx/medias/sys_master/products/h47/h1d/11023491596318.jpg
        code: PAN567
        stock: 11
        category: cocina
        owner: 653a45ff59dcb07a93afk68b
    createProduct:
      type: object
      properties:
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product features and information
        price:
          type: float
          description: Product price
        thumbnail:
          type: string
          description: Product Image URL
        code:
          type: string
          description: A product unique code
        stock:
          type: int
          description: Number of available products
        category:
          type: string
          description: Department which product belongs
        owner:
          type: string
          description: Owner product id
      example:
        title: Microondas Panasonic
        description: Microondas con capacidad de 1.2 cu. ft. y múltiples ajustes de cocción para una fácil preparación de alimentos.
        price: 1599
        thumbnail: https://www.costco.com.mx/medias/sys_master/products/h47/h1d/11023491596318.jpg
        code: PAN567
        stock: 11
        category: cocina
        owner: 653a45ff59dcb07a93afk68b

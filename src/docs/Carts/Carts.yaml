paths:
  /api/carts:
    get:
      summary: List of carts
      tags:
        - Carts
      responses:
        200:
          description: Carts were listed correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Response status
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cart"
        500:
          description: Internal Server Error.
    post:
      summary: Create new cart 
      tags:
        - Carts
      responses:
        201:
          description: Cart created succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Cart"
        500:
          description: Error interno del servidor.
  
  /api/carts/{cartId}:
    get: 
      summary: Get a cart by identifier
      tags:
        - Carts
      parameters:
        - in: path
          name: cartId
          required: true
          description: Identifier of the cart to search
          schema:
            type: string
      responses:
        200:
          description: Cart with identifier found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Cart identifier
                    example: 65ada4c4aaf88a330ad034b1
                  products:
                    type: array
                    items:
                      $ref: "../Products/Products.yaml#/components/schemas/Cart"
                      # check why it doesn't work
        404:
          description: Cart with identifier not found
          content:
          application/json:
            schema:
              type: object
              properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: cart with cartId not found
                    example: "Cart with 655a45ff59dcc07a93eff698 not found"

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: Product ID generated by data base
        products:
          type: array
          description: List of products in the cart
      example:
        _id: 655a45ff59dcc07a93eff688
        products: []
  requestBodies:
    
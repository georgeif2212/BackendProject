paths:
  /api/carts:
    get:
      summary: List of carts
      tags:
        - Carts
      responses:
        200:
          description: Carts were listed correctly.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Response status
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cart"
        500:
          description: Internal Server Error.
    post:
      summary: Create new cart 
      tags:
        - Carts
      responses:
        201:
          description: Cart created succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Cart"
        500:
          description: Error interno del servidor.
  
  /api/carts/{cartId}:
    get: 
      summary: Get a cart by identifier
      tags:
        - Carts
      parameters:
        - in: path
          name: cartId
          required: true
          description: Identifier of the cart to search
          schema:
            type: string
      responses:
        200:
          description: Cart with identifier found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Cart identifier
                    example: 65ada4c4aaf88a330ad034b1
                  products:
                    type: array
                    items:
                      $ref: "../Products/Products.yaml#/components/schemas/Cart"
                      # check why it doesn't work
        404:
          description: Cart with identifier not found
          content:
          application/json:
            schema:
              type: object
              properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: cart with cartId not found
                    example: "Cart with 655a45ff59dcc07a93eff698 not found"

  /api/carts/{cartId}/products/{productId}:
    post:
      summary: Add to the cartId the quantity of productId 
      tags:
        - Carts
      parameters:
          - in: path
            name: cartId
            required: true
            description: Identifier of the cart to search
            schema:
              type: string
          - in: path
            name: productId
            required: true
            description: Identifier of the product to add
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProductToCart"
      responses:
        200:
          description: Product added to  the cart succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Cart"
        401:
          description: No auth token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Response status
                    example: No auth token
                  login:
                    type: string
                    description: Link of login view
                    example: http://localhost:8080/views/login
        404:
          description: Cart with identifier not found
          content:
          application/json:
            schema:
              type: object
              properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: cart with cartId not found
                    example: "Cart with 655a45ff59dcc07a93eff698 not found"
    delete:
      summary: Delete a productId from the cartId
      tags:
        - Carts
      parameters:
        - in: path
          name: cartId
          required: true
          description: Identifier of the cart to search
          schema:
            type: string
        - in: path
          name: productId
          required: true
          description: Identifier of the product to add
          schema:
            type: string
      responses:
        200:
          description: Product deleted to the cart succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Cart"
        404:
          description: Cart or product with identifier not found
          content:
          application/json:
            schema:
              type: object
              properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: cart/product with cartId not found
                    example: "Cart/Product with 655a45ff59dcc07a93eff698 not found"                    
    put:
      summary: Update productId quantity from the cartId
      tags:
        - Carts
      parameters:
        - in: path
          name: cartId
          required: true
          description: Identifier of the cart to search
          schema:
            type: string
        - in: path
          name: productId
          required: true
          description: Identifier of the product to update
          schema:
            type: string
      responses:
        200:
          description: Product updated to the cart succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Cart"
        404:
          description: Cart or product with identifier not found
          content:
          application/json:
            schema:
              type: object
              properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: cart/product with cartId not found
                    example: "Cart/Product with 655a45ff59dcc07a93eff698 not found"                    

  /api/carts/{cartId}/purchase:
    post:
      summary: Buy the products from the cart
      tags:
        - Carts
      parameters:
          - in: path
            name: cartId
            required: true
            description: Identifier of the cart to buy
            schema:
              type: string
      responses:
        200:
          description: The products were purchased succesfully
          content:
            application/json:
              schema:
              $ref: "#/components/schemas/Cart"
        401:
          description: No auth token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Response status
                    example: No auth token
                  login:
                    type: string
                    description: Link of login view
                    example: http://localhost:8080/views/login
        404:
          description: Cart with identifier not found
          content:
          application/json:
            schema:
              type: object
              properties:
                  status:
                    type: string
                    description: error
                    example: error
                  message:
                    type: string
                    description: cart with cartId not found
                    example: "Cart with 655a45ff59dcc07a93eff698 not found"

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: Product ID generated by data base
        products:
          type: array
          description: List of products in the cart
      example:
        _id: 655a45ff59dcc07a93eff688
        products: []
    Ticket:
      type: object
      properties:        
      _id: 
        type: string
        description: Ticket ID generated by data base
      code: 
        type: string
        description: Ticket code
      amount:
        type: string
        description: Total purchase amount
      purchaser: 
        type: string
        description: Purchaser email
      purchase_datetime: 
        type: string
        description: Purchase date


  requestBodies:
    addProductToCart:
        type: object
        properties:
          quantity:
            type: int
            description: Product quantity to add to cart
        example:
          quantity: 3